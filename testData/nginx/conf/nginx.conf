user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 2048;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

#    定义一个名为allips的limit_req_zone用来存储session，大小是10M内存，
#    以$binary_remote_addr 为key,限制平均每秒的请求为20个，
#    1M能存储16000个状态，rete的值必须为整数，
#    如果限制两秒钟一个请求，可以设置成30r/m
     
    limit_req_zone $binary_remote_addr zone=allips:10m rate=32r/s;

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    # client_max_body_size 10M; #多少M根据实际情况填写
    

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    
    gzip  on;
    gzip_min_length  1k;
    gzip_buffers    4 32k;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/javascript application/json application/x-javascript text/javascript text/xml;
    gzip_vary on;

    server {
        listen    80;
        server_name    zzzmh.cn;
        return 301 https://$host$request_uri;
    }

    server {
        listen    443  ssl http2 default_server;
        server_name    test.zzzmh.cn;
        ssl_certificate    /etc/letsencrypt/live/zzzmh.cn/fullchain.pem;
        ssl_certificate_key    /etc/letsencrypt/live/zzzmh.cn/privkey.pem;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout    5m;
        
        ssl_ciphers    HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers    on;

        location / {
            root /root/web/static/blog/;
            access_log off;
            break;
        }

        location /api/ {
            proxy_pass http://localhost:8000/api/;
            proxy_set_header Host $host:443;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_connect_timeout 60;
            proxy_read_timeout 60;
            proxy_send_timeout 60;
            
            access_log off;
            break;
        }
        
    }
}